depth <- node.depth(tree, method = 1) - 1
tree$edge.length <- (depth[tree$edge[, 1]]/(n - 1)) - (depth[tree$edge[, 2]]/(n - 1))
grafen <- tree
plot(grafen, type="fan", no.margin = TRUE, edge.width = 1, show.tip.label = FALSE)
n <- length(tree$tip.label)
depth <- node.depth(tree, method = 2)
tree$edge.length <- (depth[tree$edge[, 1]]/(n - 1)) - (depth[tree$edge[, 2]]/(n - 1))
pagel <- tree
plot(pagel, type="fan", no.margin = TRUE, edge.width = 1, show.tip.label = FALSE)
n <- length(tree$tip.label)
depth <- log(node.depth(tree, method = 1), 10)
tree$edge.length <- (depth[tree$edge[, 1]]/(n - 1)) - (depth[tree$edge[, 2]]/(n - 1))
nee <- tree
plot(nee, type="fan", no.margin = TRUE, edge.width = 1, show.tip.label = FALSE)
phy <- pagel
#phy <- nee
plot(phy, no.margin = TRUE, edge.width = 1, show.tip.label = FALSE)
tiplabels(cex = 0.5, frame="circle", width = 3, offset = 1)
nodelabels(cex = 0.5, frame = "circle")
bodysize <- read_csv("body_mass.csv") %>%
dplyr::select(species_name, log_mean) %>%
rename(size = log_mean) %>%
column_to_rownames("species_name")
bodysize <- matrix(bodysize$size, dimnames=list(rownames(bodysize)))
bodysize <- as.matrix(bodysize[match(tree$tip.label, rownames(bodysize)), ])
### plot our tree and data showing species body mass (log) at the tips ----
#startingPhylo <- grafen
startingPhylo <- pagel
#startingPhylo <- nee
traitData.plot(phy = startingPhylo, y = bodysize)
bodysize <- as.matrix(bodysize[match(grafen$tip.label, rownames(bodysize)), ])
startingPhylo <- grafen
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 0.1,
upperBound = 10)
# get value of the parameter alpha that maximizes log-likelihood (and hence, minimizes MSE)
ou.ml$Alpha[1] # 4.044429
# get maximum log-likelihood
ou.ml$MaximumLikelihood # -35.52056
# get the phylogeny with branch lengths transformed by the ML model parameters and plot it
transformedGrafen <- ou.ml$ouPhy
# plot the phylogeny with branch lengths transformed and showing species body mass (log) at the tips
traitData.plot(phy = transformedGrafen, y = bodysize)
bodysize <- as.matrix(bodysize[match(grafen$tip.label, rownames(bodysize)), ])
startingPhylo <- grafen
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 0.1,
upperBound = 10)
bodysize <- as.matrix(bodysize[match(grafen$tip.label, rownames(bodysize)), ])
startingPhylo <- grafen
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 3,
upperBound = 15)
bodysize <- as.matrix(bodysize[match(pagel$tip.label, rownames(bodysize)), ])
startingPhylo <- pagel
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 0.1,
upperBound = 5)
ou.ml$Alpha[1]
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = -15,
upperBound = -10)
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE
)
bodysize <- as.matrix(bodysize[match(grafen$tip.label, rownames(bodysize)), ])
startingPhylo <- grafen
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE)
bodysize <- as.matrix(bodysize[match(grafen$tip.label, rownames(bodysize)), ])
startingPhylo <- grafen
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 3,
upperBound = 15)
bodysize <- as.matrix(bodysize[match(grafen$tip.label, rownames(bodysize)), ])
startingPhylo <- grafen
acdc.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 3,
upperBound = 15)
acdc.ml$Alpha[1]
acdc.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 3,
upperBound = 15)
acdc.ml
acdc.ml$MaximumLikelihood
bodysize <- as.matrix(bodysize[match(pagel$tip.label, rownames(bodysize)), ])
startingPhylo <- pagel
acdc.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 0.1,
upperBound = 5)
bodysize <- as.matrix(bodysize[match(pagel$tip.label, rownames(bodysize)), ])
startingPhylo <- pagel
acdc.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 3,
upperBound = 8)
bodysize <- as.matrix(bodysize[match(pagel$tip.label, rownames(bodysize)), ])
startingPhylo <- pagel
acdc.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 1,
upperBound = 6)
bodysize <- as.matrix(bodysize[match(pagel$tip.label, rownames(bodysize)), ])
startingPhylo <- pagel
acdc.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 1,
upperBound = 8)
bodysize <- as.matrix(bodysize[match(pagel$tip.label, rownames(bodysize)), ])
startingPhylo <- pagel
acdc.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "ACDC",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 1,
upperBound = 7)
acdc.ml$MaximumLikelihood
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = -15,
upperBound = -10)
ou.ml$Alpha[1]
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 0.01,
upperBound = 2)
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE)
ou.ml$Alpha[1]
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 0,
upperBound = 20)
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = -10,
upperBound = 20)
plot(nee)
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE
)
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE
)
ou.ml$MaximumLikelihood
ou.ml$Alpha[1]
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 0.001,
upperBound = 10)
ou.ml$Alpha[1]
ou.ml$MaximumLikelihood
bodysize <- as.matrix(bodysize[match(nee$tip.label, rownames(bodysize)), ])
startingPhylo <- nee
ou.ml <- transformPhylo.ML(
phy = multi2di(startingPhylo),
y = bodysize, model = "OU",
returnPhy = TRUE,
profilePlot = TRUE,
lowerBound = 0.001,
upperBound = 10)
# get value of the parameter alpha that maximizes log-likelihood (and hence, minimizes MSE)
ou.ml$Alpha[1] # 0.001
# get maximum log-likelihood
ou.ml$MaximumLikelihood # -34.31021
# get the phylogeny with branch lengths transformed by the ML model parameters and plot it
transformedNee <- ou.ml$ouPhy
# plot the phylogeny with branch lengths transformed and showing species body mass (log) at the tips
traitData.plot(phy = transformedNee, y = bodysize)
getwd()
setwd("/media/home_dir/projects/bird_migration_network/Zurich_2016/R_2019/get_correlation_phylo_eco/")
mantel.randtest
library("ade4")
install.packages("ade4")
### load required packages ----
library("ape")
library("ade4")
library("tidyverse") # use dplyr::select (instead of select) if library MASS is loaded
packageVersion("ade4") # 5.3
phylo_dist <- read_csv("phylogenetic_distance_matrix.csv") # species names are separated by hyphen
eco_dist_WN <- read_csv("ecological_distance_matrix_WN.csv") # species names are separated by blank space
eco_dist_rel_ST <- read_csv("ecological_distance_matrix_rel_ST.csv") # species names are separated by blank space
eco_dist_rel_OS <- read_csv("ecological_distance_matrix_rel_OS.csv") # species names are separated by blank space
phylo_dist_matrix <- as.matrix(phylo_dist %>% select(-X1))
eco_dist_matrix_WN <- as.matrix(eco_dist_WN %>% select(-X1))
test <- mantel.test(phylo_dist_matrix, eco_dist_matrix_WN, nperm = 1000, graph = TRUE)
z_stat_WN <- test$z.stat
z_stat_WN
p_value_WN <- test$p
p_value_WN
mantel.randtest(phylo_dist_matrix, eco_dist_matrix)
phylo_dist_matrix <- as.dist(phylo_dist_matrix)
eco_dist_matrix <- as.dist(eco_dist_matrix)
mantel.randtest(phylo_dist_matrix, eco_dist_matrix)
plot(r1 <- mantel.randtest(dist_phylo,dist_eco_shared))
plot(r1 <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix))
r1
r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix)
r
plot(r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix))
phylo_dist_matrix <- as.matrix(phylo_dist %>% select(-X1))
r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix)
phylo_dist_matrix <- as.dist(phylo_dist_matrix %>% select(-X1))
phylo_dist_matrix <- as.matrix(phylo_dist %>% select(-X1))
phylo_dist_matrix <- as.dist(phylo_dist_matrix)
r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix)
plot(r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix))
eco_dist_matrix_WN <- as.dist(eco_dist_matrix_WN)
r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_WN)
r
# correlation = 0.2806331
# p-value < 0.001
plot(r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix))
eco_dist_matrix_rel_ST <- as.matrix(eco_dist_rel_ST %>% select(-X1))
eco_dist_matrix_ST <- as.dist(eco_dist_matrix_ST)
r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_ST)
r
# correlation = -0.05019882
# p-value = -0.05019882
plot(r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_ST))
eco_dist_matrix_rel_OS <- as.matrix(eco_dist_rel_OS %>% select(-X1))
eco_dist_matrix_OS <- as.dist(eco_dist_matrix_OS)
r <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_OS)
r
eco_dist_matrix_rel_OS <- as.matrix(eco_dist_rel_OS %>% select(-X1))
eco_dist_matrix_OS <- as.dist(eco_dist_matrix_OS)
r_rel_OS <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_OS)
r_rel_OS
phylo_dist <- read_csv("phylogenetic_distance_matrix.csv") # species names are separated by hyphen
eco_dist_WN <- read_csv("ecological_distance_matrix_WN.csv") # species names are separated by blank space
eco_dist_rel_ST <- read_csv("ecological_distance_matrix_rel_ST.csv") # species names are separated by blank space
eco_dist_rel_OS <- read_csv("ecological_distance_matrix_rel_OS.csv") # species names are separated by blank space
phylo_dist_matrix <- as.matrix(phylo_dist %>% select(-X1))
phylo_dist_matrix <- as.dist(phylo_dist_matrix)
# WN
eco_dist_matrix_WN <- as.matrix(eco_dist_WN %>% select(-X1))
eco_dist_matrix_WN <- as.dist(eco_dist_matrix_WN)
r_WN <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_WN)
r_WN
plot(r_WN <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix))
eco_dist_matrix_rel_ST <- as.matrix(eco_dist_rel_ST %>% select(-X1))
eco_dist_matrix_rel_ST <- as.dist(eco_dist_matrix_rel_ST)
r_rel_ST <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_rel_ST)
r_rel_ST
# correlation = -0.05951908
# p-value = -0.05019882
plot(r_rel_ST <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_rel_ST))
eco_dist_matrix_rel_OS <- as.matrix(eco_dist_rel_OS %>% select(-X1))
eco_dist_matrix_rel_OS <- as.dist(eco_dist_matrix_rel_OS)
r_rel_OS <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_rel_OS)
r_rel_OS
# correlation = -0.02632814
# p-value = 0.922
plot(r_rel_OS <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_rel_OS))
eco_dist_WN <- read_csv("ecological_distance_matrix_WN.csv") # species names are separated by blank space
eco_dist_ST <- read_csv("ecological_distance_matrix_ST.csv") # species names are separated by blank space
eco_dist_OS <- read_csv("ecological_distance_matrix_OS.csv") # species names are separated by blank space
eco_dist_rel_ST <- read_csv("ecological_distance_matrix_rel_ST.csv") # species names are separated by blank space
eco_dist_rel_OS <- read_csv("ecological_distance_matrix_rel_OS.csv") # species names are separated by blank space
eco_dist_WN <- read_csv("ecological_distance_matrix_WN.csv") # species names are separated by blank space
eco_dist_ST <- read_csv("ecological_distance_matrix_ST.csv") # species names are separated by blank space
eco_dist_OS <- read_csv("ecological_distance_matrix_OS.csv") # species names are separated by blank space
eco_dist_rel_ST <- read_csv("ecological_distance_matrix_rel_ST.csv") # species names are separated by blank space
eco_dist_rel_OS <- read_csv("ecological_distance_matrix_rel_OS.csv") # species names are separated by blank space
eco_dist_WN <- read_csv("ecological_distance_matrix_WN.csv") # species names are separated by blank space
eco_dist_ST <- read_csv("ecological_distance_matrix_ST.csv") # species names are separated by blank space
eco_dist_OS <- read_csv("ecological_distance_matrix_OS.csv") # species names are separated by blank space
eco_dist_rel_ST <- read_csv("ecological_distance_matrix_rel_ST.csv") # species names are separated by blank space
eco_dist_rel_OS <- read_csv("ecological_distance_matrix_rel_OS.csv") # species names are separated by blank space
phylo_dist_matrix <- as.matrix(phylo_dist %>% select(-X1))
phylo_dist_matrix <- as.dist(phylo_dist_matrix)
eco_dist_matrix_WN <- as.matrix(eco_dist_WN %>% select(-X1))
eco_dist_matrix_WN <- as.dist(eco_dist_matrix_WN)
r_WN <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_WN)
# correlation = 0.2806331
# p-value < 0.001
plot(r_WN <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix))
r_WN
eco_dist_matrix_ST <- as.matrix(eco_dist_ST %>% select(-X1))
eco_dist_matrix_ST <- as.dist(eco_dist_matrix_ST)
r_ST <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_ST)
# correlation = -0.05951908
# p-value = 0.999
plot(r_ST <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_ST))
r_ST
eco_dist_matrix_OS <- as.matrix(eco_dist_OS %>% select(-X1))
eco_dist_matrix_OS <- as.dist(eco_dist_matrix_OS)
r_OS <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_OS)
# correlation = -0.02632814
# p-value = 0.922
plot(r_OS <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_OS))
r_OS
eco_dist_matrix_WN <- as.matrix(eco_dist_WN %>% select(-X1))
eco_dist_matrix_WN <- as.dist(eco_dist_matrix_WN)
r_WN <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_WN)
# correlation = 0.2806331
# p-value < 0.001
plot(r_WN <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_WN))
head(phylo_dist_matrix)
head(eco_dist_matrix)
eco_edge_list <- read_csv("ecological_distance_edgelist.csv")
head(eco_edge_list)
View(eco_edge_list)
eco_edge_list %>% mean(S)
eco_edge_list %>% summarise(S, mean)
summarise(eco_edge_list, mean=mean(S), sd=sd(S))
getwd()
setwd("/media/home_dir/projects/bird_migration_network/Zurich_2016/R_2019/get_ecological_distance_matrix/")
S <- eco_dist_edges %>% select(species_1, species_2, S)
S$species_1 <- as.character(S$species_1)
S$species_2 <- as.character(S$species_2)
eco_dist_matrix_S <- as.symmetricAdjacencyMatrix(S, weighted = TRUE, rule = "weak")
write.csv(eco_dist_matrix_S, "ecological_distance_matrix_S.csv")
setwd("/media/home_dir/projects/bird_migration_network/Zurich_2016/R_2019/get_correlation_phylo_eco/")
eco_dist_matrix_S <- as.matrix(eco_dist_S %>% select(-X1))
eco_dist_matrix_S <- as.dist(eco_dist_matrix_S)
r_S <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_S)
# correlation = -0.02632814
# p-value = 0.922
plot(r_S <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_S))
r_S
eco_dist_S <- read_csv("ecological_distance_matrix_S.csv")
eco_dist_matrix_S <- as.matrix(eco_dist_S %>% select(-X1))
eco_dist_matrix_S <- as.dist(eco_dist_matrix_S)
r_S <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_S)
# correlation = 0.1837811
# p-value = < 0.001
plot(r_S <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_S))
r_S
as.matrix(eco_dist_S %>% select(-X1))
eco_dist_matrix_S <- as.matrix(eco_dist_S %>% select(-X1))
View(eco_dist_matrix_S)
eco_dist_matrix_X <- as.dist(eco_dist_matrix_S)
head(eco_dist_matrix_S)
head(eco_dist_matrix_X)
tail(eco_dist_matrix_X)
tail(eco_dist_matrix_X)
tail(eco_dist_matrix_S)
tail(eco_dist_matrix_X)
tail(phylo_dist_matrix)
phylo_dist_matrix <- as.matrix(phylo_dist %>% select(-X1))
tail(phylo_dist_matrix)
tail(eco_dist_matrix_S)
tail(eco_dist_matrix_X)
eco_dist_matrix_S <- as.matrix(eco_dist_S %>% select(-X1))
eco_dist_matrix_S <- as.dist(eco_dist_matrix_S)
r_S <- mantel.randtest(phylo_dist_matrix, eco_dist_matrix_S)
r_S
head(phylo_dist_matrix)
is.euclid(phylo_dist_matrix)
phylo_dist_matrix <- as.matrix(phylo_dist %>% select(-X1))
phylo_dist_matrix <- as.dist(phylo_dist_matrix)
is.euclid(phylo_dist_matrix)
eco_dist_matrix_WN <- as.matrix(eco_dist_WN %>% select(-X1))
eco_dist_matrix_WN <- as.dist(eco_dist_matrix_WN)
is.euclid(eco_dist_matrix_WN)
is.euclid(phylo_dist_matrix)
is.euclid(phylo_dist_matrix)
eco_dist_matrix_ST <- as.matrix(eco_dist_ST %>% select(-X1))
eco_dist_matrix_ST <- as.dist(eco_dist_matrix_ST)
is.euclid(eco_dist_matrix_ST)
eco_dist_matrix_WN <- as.matrix(eco_dist_WN %>% select(-X1))
eco_dist_matrix_WN <- as.dist(eco_dist_matrix_WN)
is.euclid(eco_dist_matrix)
eco_dist_matrix_ST <- as.matrix(eco_dist_ST %>% select(-X1))
eco_dist_matrix_ST <- as.dist(eco_dist_matrix_ST)
is.euclid(eco_dist_matrix_ST)
eco_dist_WN <- read_csv("ecological_distance_matrix_WN.csv") # species names are separated by blank space
eco_dist_ST <- read_csv("ecological_distance_matrix_ST.csv") # species names are separated by blank space
eco_dist_OS <- read_csv("ecological_distance_matrix_OS.csv") # species names are separated by blank space
eco_dist_rel_ST <- read_csv("ecological_distance_matrix_rel_ST.csv") # species names are separated by blank space
eco_dist_rel_OS <- read_csv("ecological_distance_matrix_rel_OS.csv") # species names are separated by blank space
eco_dist_S <- read_csv("ecological_distance_matrix_S.csv") # species names are separated by blank space
phylo_dist <- read_csv("phylogenetic_distance_matrix.csv") # species names are separated by hyphen
phylo_dist_matrix <- as.matrix(phylo_dist %>% select(-X1))
phylo_dist_matrix <- as.dist(phylo_dist_matrix)
is.euclid(phylo_dist_matrix)
eco_dist_matrix_WN <- as.matrix(eco_dist_WN %>% select(-X1))
eco_dist_matrix_WN <- as.dist(eco_dist_matrix_WN)
is.euclid(eco_dist_matrix)
eco_dist_matrix_ST <- as.matrix(eco_dist_ST %>% select(-X1))
eco_dist_matrix_ST <- as.dist(eco_dist_matrix_ST)
is.euclid(eco_dist_matrix_ST)
eco_dist_matrix_ST <- as.matrix(eco_dist_ST %>% select(-X1))
eco_dist_matrix_ST <- as.dist(eco_dist_matrix_ST)
head(eco_dist_matrix_ST)
is.euclid(eco_dist_matrix_OS) #
is.euclid(eco_dist_matrix_rel_ST)
is.euclid(eco_dist_matrix_rel_OS)
is.euclid(eco_dist_matrix_S)
eco_dist_matrix_WN <- as.matrix(eco_dist_WN %>% select(-X1))
eco_dist_matrix_WN <- as.dist(eco_dist_matrix_WN)
is.euclid(eco_dist_matrix)
summary(phylo_dist_matrix)
summary(eco_dist_matrix)
summary(eco_dist_matrix_WN)
summary(eco_dist_matrix_ST)
summary(eco_dist_matrix_ST)
summary(eco_dist_matrix_rel_ST)
summary(eco_dist_matrix_S)
is.euclidean(eco_dist_matrix_WN, print = TRUE)
is.euclid(eco_dist_matrix_WN, print = TRUE)
is.euclid(eco_dist_matrix_OS, print = TRUE)
Dcenter(phylo_dist_matrix)
install.packages("energy")
library("energy")
packageVersion("energy") #
Dcenter(phylo_dist_matrix)
a <- Dcenter(phylo_dist_matrix)
a
summary(a)
class(a)
phylo_dist_matrix <- as.matrix(phylo_dist %>% select(-X1))
phylo_dist_matrix <- as.dist(phylo_dist_matrix)
# Euclidean properties
summary(phylo_dist_matrix)
is.euclid(phylo_dist_matrix, print = TRUE) # the matrix is Euclidean by the Gower's theorem (i.e, all the eigenvalues are positive or equal to zero)
# Double-centered phylogenetic distance matrix
phylo_dist_matrix_centered <- Dcenter(phylo_dist_matrix)
